#!/bin/sh

# Running this script creates the appropriate symlinks in home
# Use from within dotfiles directory
# A lot of this extra knowledge courtesy of vimcasts.org!

# Vim
ln -s dotfiles/vim/ ~/.vim
ln -s dotfiles/vim/vimrc ~/.vimrc
# Vim persistent undo directory
mkdir ~/.vimundo

# Zsh
ln -s dotfiles/zsh/zshrc ~/.zshrc
ln -s dotfiles/zsh/zshenv ~/.zshenv
ln -s dotfiles/zsh/zshlocal ~/.zshlocal

# Pentadactyl
ln -s dotfiles/pentadactyl/pentadactylrc ~/.pentadactylrc

# Screen
ln -s dotfiles/screen/screenrc ~/.screenrc

# Make a known_hosts file if none, otherwise zsh throws an error for our .zshrc
echo "Checking for known_hosts in ~/.ssh/..."
if test -f ~/.ssh/known_hosts; then
  echo "known_hosts found..."
else
  echo "Does not exist. Creating..."
  mkdir -p ~/.ssh
  touch ~/.ssh/known_hosts
fi

# Ack for this user (perl 5.8.8 or higher on system)
# Curl may need to have proxy settings
echo "Checking for ack in ~/bin/..."
if test -f ~/bin/ack; then
  echo "ack found..."
else
  echo "Downloading ack from betterthangrep.com..."
  mkdir -p ~/bin
  curl http://betterthangrep.com/ack-standalone > ~/bin/ack && chmod 0755 !#:3 
fi

# This repository has vim plugins as submodules, so initialise and clone them in
git submodule init
git submodule update

# Add more vim plugins from this dotfiles directory, like so:
#     git submodule add git://github.com/tpope/vim-pathogen.git vim/bundle/pathogen
#
# Apart from updating plugins individually, you can update all submodules in one shot
#     git submodule foreach git pull origin master

# color for git! Some machines don't have it.
git config --global color.ui true
git config --global core.editor "vim"
